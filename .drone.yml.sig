eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGJ1aWxkX2xldl93ZWI6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgbGV2LXdlYiAuCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHB1bGxfcmVxdWVzdF0KCiAgYnVpbGRfYWNjZXB0YW5jZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtdCBsZXYtd2ViLWFjYyAtZiBEb2NrZXJmaWxlLWFjY2VwdGFuY2UgLgogICAgd2hlbjoKICAgICAgZXZlbnQ6IFtwdXNoLCBwdWxsX3JlcXVlc3RdCgogIHRlc3RfYWNjZXB0YW5jZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBwdWxsIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9sZXYtYXBpLW1vY2sKICAgICAgLSBkb2NrZXIgcnVuIC1kIC0tbmV0IGhvc3QgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2xldi1hcGktbW9jawogICAgICAtIGRvY2tlciBydW4gLWQgLS1uZXQgaG9zdCBsZXYtd2ViIHJ1biBzdGFydDphY2NlcHRhbmNlCiAgICAgIC0gZG9ja2VyIHJ1biAtLW5ldCBob3N0IGxldi13ZWItYWNjCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHB1bGxfcmVxdWVzdF0KCiAgaW1hZ2VfdG9fYXJ0aWZhY3Rvcnk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InJlZ3QtYnVpbGQtYm90IiAtcD0iJHtET0NLRVJfQVJUSUZBQ1RPUllfUEFTU1dPUkR9IiBkb2NrZXIuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51awogICAgICAtIGRvY2tlciB0YWcgbGV2LXdlYiBkb2NrZXIuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51ay91a2hvbWVvZmZpY2VkaWdpdGFsL2xldi13ZWI6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgICAtIGRvY2tlciBwdXNoIGRvY2tlci5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrL3VraG9tZW9mZmljZWRpZ2l0YWwvbGV2LXdlYjoke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogcHVzaAoKCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEtZGluZAogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgY29tbWFuZDoKICAgICAgLSAiLXMiCiAgICAgIC0gIm92ZXJsYXkiCg.O9WHVyMvf5xVGZQEDiXnNujoBj28_B77wc_vrHuJUkM