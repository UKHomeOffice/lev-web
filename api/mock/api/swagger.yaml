---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Life Events API"
  contact:
    name: "Home Office Digital"
basePath: "/"
tags:
- name: "apiv0events"
paths:
  /api/v0/events/birth:
    get:
      tags:
      - "apiv0events"
      summary: "Get birth events"
      description: "Get a list of births. Returns an empty list on no results found"
      operationId: "getEvents"
      produces:
      - "application/json"
      parameters:
      - name: "lastname"
        in: "query"
        description: "The last name of the person being searched for"
        required: true
        type: "string"
      - name: "forenames"
        in: "query"
        description: "The first name of the person being searched for"
        required: false
        type: "string"
      - name: "forename1"
        in: "query"
        description: "The forenames of the person being searched for"
        required: false
        type: "string"
      - name: "forename2"
        in: "query"
        description: "The second name of the person being searched for"
        required: false
        type: "string"
      - name: "forename3"
        in: "query"
        description: "The third name of the person being searched for"
        required: false
        type: "string"
      - name: "forename4"
        in: "query"
        description: "The fourth name of the person being searched for"
        required: false
        type: "string"
      - name: "dateofbirth"
        in: "query"
        description: "The ISO 8601 Date of birth of the person being searched for"
        required: false
        type: "string"
        format: "date-time"
      - name: "gender"
        in: "query"
        description: "The gender of the person being searched for"
        required: false
        type: "string"
        enum:
        - "Male"
        - "Female"
        - "Indeterminate"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BirthImpl"
        400:
          description: "Parameter wrong or missing"
        500:
          description: "Problem connecting to ORDs"
  /api/v0/events/birth/{id}:
    get:
      tags:
      - "apiv0events"
      summary: "Get birth event"
      description: "Get a single birth. Returns a 404 response on no results found"
      operationId: "getEvent"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the birth"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BirthImpl"
        404:
          description: "Record not found"
        500:
          description: "Problem connecting to ORDs"
definitions:
  ChildImpl:
    properties:
      name:
        description: "Name of the person"
        $ref: "#/definitions/PersonNameImpl"
      birthplace:
        type: "string"
        example: "Kensington"
        description: "The birthplace of the person"
      dateOfBirth:
        type: "string"
        format: "date"
        example: "2008-08-08"
        description: "Date of birth of the person"
      sex:
        type: "string"
        example: "Indeterminate"
        description: "Sex of the person"
        enum:
        - "Male"
        - "Female"
        - "Indeterminate"
      originalName:
        description: "The name originally given to the person"
        $ref: "#/definitions/PersonNameImpl"
    description: "The subject of the birth record, the newborn child"
  BirthImpl:
    required:
    - "date"
    - "id"
    - "location"
    - "previousRegistration"
    - "registrarSignature"
    - "status"
    - "subjects"
    - "systemNumber"
    - "type"
    properties:
      date:
        type: "string"
        format: "date"
        example: "2008-08-09"
        description: "Date of the event"
      location:
        description: "Location that the event happened at"
        $ref: "#/definitions/LocationImpl"
      registrarSignature:
        type: "string"
        example: "J. Smith"
        description: "Signature of registrar"
      type:
        type: "string"
        example: "birth"
        description: "Type of the event"
      id:
        type: "integer"
        format: "int32"
        description: "Unique ID for this event"
      subjects:
        description: "People involved, may have keys parent1,parent2,child"
        $ref: "#/definitions/SubjectsImpl"
      systemNumber:
        type: "integer"
        format: "int32"
        description: "System number for this event"
      status:
        description: "Status flags associated with this birth"
        $ref: "#/definitions/BirthStatusImpl"
      previousRegistration:
        description: "Details of the previous record, where one exists"
        $ref: "#/definitions/PreviousRegistrationImpl"
    description: "An event that represents a change of state"
  SubjectsImpl:
    properties:
      child:
        description: "Child"
        $ref: "#/definitions/ChildImpl"
      father:
        description: "Father"
        $ref: "#/definitions/FatherImpl"
      mother:
        description: "Mother"
        $ref: "#/definitions/MotherImpl"
      informant:
        description: "Informant"
        $ref: "#/definitions/InformantImpl"
    description: "Subjects involved in this event"
  BirthStatusImpl:
    properties:
      blockedRegistration:
        type: "boolean"
        description: "TBD, what does this mean"
        default: false
      cancelled:
        type: "boolean"
        description: "TBD, what does this mean"
        default: false
      cautionMark:
        type: "boolean"
        description: "TBD, what does this mean"
        default: false
      courtOrder:
        type: "string"
        example: "None"
        description: "TBD, what does this mean"
        enum:
        - "None"
        - "In place"
        - "Revoked"
      fictitiousBirth:
        type: "boolean"
        description: "TBD, what does this mean"
        default: false
      reRegistered:
        type: "string"
        example: "None"
        description: "TBD, what does this mean"
        enum:
        - "None"
        - "Father modified"
        - "Subsequently married"
    description: "If this is a fictitious birth, it's blocked or cautioned"
  FatherImpl:
    properties:
      name:
        description: "Name of the person"
        $ref: "#/definitions/PersonNameImpl"
      birthplace:
        type: "string"
        example: "Kensington"
        description: "The birthplace of the person"
      occupation:
        type: "string"
        example: "Carpenter"
        description: "The occupation of the parent"
    description: "The father named on the birth record"
  MotherImpl:
    properties:
      name:
        description: "Name of the person"
        $ref: "#/definitions/PersonNameImpl"
      birthplace:
        type: "string"
        example: "Kensington"
        description: "The birthplace of the person"
      occupation:
        type: "string"
        example: "Carpenter"
        description: "The occupation of the parent"
      maidenSurname:
        type: "string"
        example: "Black"
        description: "Maiden surname"
      marriageSurname:
        type: "string"
        example: "White"
        description: "Surname at marriage if different from maiden surname"
      usualAddress:
        type: "string"
        example: "34 Matriarchs Place, Mumstown, Mumford"
        description: "Usual address (if different from the place of child's birth)"
    description: "The mother named on the birth record"
  PersonNameImpl:
    properties:
      givenName:
        type: "string"
        example: "Joan Narcissus Ouroboros"
        description: "Given name of the person"
      surname:
        type: "string"
        example: "Smith"
        description: "Surname of the person"
      fullName:
        type: "string"
        example: "Joan Narcissus Ouroboros Smith"
        description: "Full name of the person"
      qualifier:
        type: "string"
        example: "generated from prepending forename to surname"
        description: "Details about how the full name was made"
    description: "A structure containing the name"
  LocationImpl:
    properties:
      name:
        type: "string"
        example: "Manchester, Manchester, Metropolitan District of Manchester"
        description: "Name"
      nameQualifier:
        type: "string"
        example: "generated by concatenating registrationDistrict, subDistrict and\
          \ administrativeArea"
        description: "Name qualifier"
      registrationDistrict:
        type: "string"
        example: "Manchester"
        description: "Registration district"
      subDistrict:
        type: "string"
        example: "Manchester"
        description: "Sub-district"
      administrativeArea:
        type: "string"
        example: "Metropolitan District of Manchester"
        description: "Administrative area"
    description: "The location an event occurred"
  PreviousRegistrationImpl:
    required:
    - "date"
    - "systemNumber"
    properties:
      date:
        type: "string"
        format: "date"
        example: "2008-08-09"
        description: "Date of the event"
      systemNumber:
        type: "integer"
        format: "int32"
        description: "System number for this event"
    description: "Details of the previous record, where one exists"
  InformantImpl:
    properties:
      name:
        description: "Name of the person"
        $ref: "#/definitions/PersonNameImpl"
      usualAddress:
        type: "string"
        example: "34 Matriarchs Place, Mumstown, Mumford"
        description: "The usual address of the person, if different from the mother's"
      qualification:
        type: "string"
        example: "Mother"
        description: "The qualification of the informant"
      signature:
        type: "string"
        example: "J. Smith"
        description: "The signature of the informant"
    description: "The informant of the birth record"
