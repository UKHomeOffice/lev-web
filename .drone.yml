pipeline:

  build:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
      - DOCKER_IMAGE=lev-web
    commands:
      - docker build -t "${DOCKER_IMAGE}" .
      - docker build -t "${DOCKER_IMAGE}-testing" -f Dockerfile-testing .
      - docker run -d --net host "${DOCKER_IMAGE}"
      - sleep 5
      - docker run --net host "${DOCKER_IMAGE}-testing"
    when:
      branch: master
      event: [pull_request, push]

  push_image:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
      - DOCKER_REPO=artifactory-internal.digital.homeoffice.gov.uk
      - DOCKER_BASEDIR=/
      - DOCKER_USERNAME=lev-web-robot
      - DOCKER_IMAGE=lev-web
    commands:
      - PACKAGE_VERSION=$(grep version package.json | head -1 | awk -F ":" '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
      - TAG="v${PACKAGE_VERSION}-${DRONE_BUILD_NUMBER}-${DRONE_COMMIT}"
      - IMAGE="${DOCKER_REPO}${DOCKER_BASEDIR}${DOCKER_IMAGE}"
      - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}" "${DOCKER_REPO}"
      - docker tag "${DOCKER_IMAGE}" "${IMAGE}:${TAG}"
      - docker tag "${DOCKER_IMAGE}" "${IMAGE}:latest"
      - docker push "${IMAGE}:${TAG}"
      - docker push "${IMAGE}:latest"
      - E2E_IMAGE="${IMAGE}-e2e"
      - docker build -t "${E2E_IMAGE}" -f Dockerfile-e2e .
      - docker tag "${E2E_IMAGE}" "${E2E_IMAGE}:${TAG}"
      - docker tag "${E2E_IMAGE}" "${E2E_IMAGE}:latest"
      - docker push "${E2E_IMAGE}:${TAG}"
      - docker push "${E2E_IMAGE}:latest"
    when:
      branch: master
      event: push

  deploy_image:
    image: quay.io/ukhomeofficedigital/kd:latest
    environment:
      - DOCKER_REPO=artifactory-internal.digital.homeoffice.gov.uk
      - DOCKER_BASEDIR=/
      - DOCKER_IMAGE=lev-web
    commands:
      - PACKAGE_VERSION=$(grep version package.json | head -1 | awk -F ":" '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
      - TAG="v${PACKAGE_VERSION}-${DRONE_BUILD_NUMBER}-${DRONE_COMMIT}"
      - IMAGE="${DOCKER_REPO}${DOCKER_BASEDIR}${DOCKER_IMAGE}"
      - kubectl="kubectl --insecure-skip-tls-verify --server=${KUBE_SERVER} --namespace=${KUBE_NAMESPACE} --token=${KUBE_TOKEN}"
      - ${kubectl} scale deployment ${KUBE_DEPLOYMENT} --replicas 2
      - ${kubectl} set image deployment/${KUBE_DEPLOYMENT} "${KUBE_CONTAINER}=${IMAGE}:${TAG}"
      - ${kubectl} rollout status deployment/${KUBE_DEPLOYMENT}
      - ${kubectl} scale deployment ${KUBE_DEPLOYMENT} --replicas 1
    when:
      branch: master
      event: push

  e2e_test:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
      - DOCKER_REPO=artifactory-internal.digital.homeoffice.gov.uk
      - DOCKER_BASEDIR=/
      - DOCKER_USERNAME=lev-web-robot
      - DOCKER_IMAGE=lev-web-e2e
    commands:
      - PACKAGE_VERSION=$(grep version package.json | head -1 | awk -F ":" '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
      - TAG="v${PACKAGE_VERSION}-${DRONE_BUILD_NUMBER}-${DRONE_COMMIT}"
      - IMAGE="${DOCKER_REPO}${DOCKER_BASEDIR}${DOCKER_IMAGE}"
      - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}" "${DOCKER_REPO}"
      - docker run --rm -e "ENV=dev" -e "TEST_URL=${DEV_URL}" -e "USERNAME=${DEV_USERNAME}" -e "PASSWORD=${DEV_PASSWORD}" "${IMAGE}:${TAG}"
    when:
      branch: master
      event: push

services:
  mock:
    image: quay.io/ukhomeofficedigital/lev-api-mock:v1.2.0-327-246830c0d3e05b5f7f405803e044974848268bdc
  dind:
    image: docker:1.11-dind
    privileged: true
    command:
      - "-s"
      - "overlay"
