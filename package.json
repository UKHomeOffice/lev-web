{
  "name": "lev-web",
  "description": "Life Event Verification Web Interface",
  "version": "0.1.0",
  "main": "app.js",
  "scripts": {
    "start": "node .",
    "stop": "pkill levweb || true",
    "dev": "npm-run-all -s stop:all acceptance:pause dev:up",
    "dev:quick": "npm-run-all -s stop:all acceptance:pause dev:up-quick",
    "dev:up-quick": "npm-run-all -p dev:frontend-quick dev:backend-quick",
    "dev:frontend-quick": "npm-run-all -p create:trigger watch:sass watch:js",
    "dev:backend-quick": "npm-run-all -p watch:app start:mockapi",
    "dev:up": "npm-run-all -p dev:frontend dev:backend",
    "dev:frontend": "npm-run-all -p create:trigger watch:sass watch:js watch:chimp",
    "dev:backend": "npm-run-all -p watch:app start:mockapi watch:unit",
    "dev:local-api": "npm-run-all -s stop:all acceptance:pause dev:up-local-api",
    "dev:up-local-api": "npm-run-all -p dev:frontend-quick watch:app",
    "watch:app": "NODE_ENV=development nodemon -w app.js -w config.js -w routes -w middleware -w locales -w lib -w fields -w controllers -w api .",
    "test": "npm-run-all lint lint:sass cover check-coverage test:acceptance",
    "test:unit": "NODE_ENV=test mocha ./test/unit",
    "watch:unit": "nodemon -w app.js -w config.js -w routes -w middleware -w locales -w lib -w fields -w controllers -w api -w test/unit -e js,json -x 'npm-run-all -s acceptance:pause lint cover acceptance:play'",
    "test:acceptance": "npm-run-all stop:mockapi start:mockapi test:acceptance:sub stop:mockapi",
    "test:acceptance:sub": "npm-run-all -pr start:acceptance chimp",
    "test:ci": "npm-run-all -s lint lint:sass cover check-coverage chimp",
    "start:acceptance": "NODE_ENV=acceptance npm start",
    "start:mockapi": "docker run -d -p 8080:8080 --name lev-api-mock --env 'MOCK=true' docker.digital.homeoffice.gov.uk/lev-api:0.0",
    "stop:mockapi": "npm-run-all -s -c --silent stop:mockapi:kill stop:mockapi:rm",
    "stop:mockapi:kill": "docker kill lev-api-mock || true",
    "stop:mockapi:rm": "docker rm lev-api-mock || true",
    "stop:all": "npm-run-all -c stop:mockapi stop",
    "acceptance:pause": "touch ./.acceptance.lock 2>/dev/null",
    "acceptance:play": "rm -f ./.acceptance.lock ; [ -e ./.acceptance.waiting ] && npm run create:trigger || true",
    "acceptance:wait": "touch ./.acceptance.waiting 2>/dev/null",
    "acceptance:done": "rm -f ./.acceptance.waiting",
    "watch:chimp": "nodemon -d 1 -w test/acceptance -w views -w .acceptance.trgr -w app.js -w config.js -w routes -w middleware -w locales -w lib -w fields -w controllers -w api -e js,json,html,trgr -x 'npm-run-all -s acceptance:wait chimp:check'",
    "chimp:check": "[ -e ./.acceptance.lock ] && printf '\n==> NOTE: Waiting for linting and unit tests to complete before running E2E tests\n\n' || npm-run-all -s -c chimp acceptance:done",
    "chimp": "NODE_ENV=acceptance chimp --mocha --browser=phantomjs --path=./test/acceptance/spec/",
    "chimp:ff": "NODE_ENV=acceptance chimp --mocha --browser=firefox --path=./test/acceptance/spec/ --watch",
    "smoke": "chimp --mocha --browser=phantomjs --path=./test/smoke/",
    "test:browser": "npm run $([ -n \"${SMOKE_TEST}\" ] && echo smoke || echo chimp)",
    "create:trigger": "touch ./.acceptance.trgr 2>/dev/null",
    "lint": "eslint .",
    "lint:fix": "eslint --fix .",
    "lint:client": "eslint ./assets/js",
    "cover": "istanbul cover _mocha -- ./test/unit",
    "check-coverage": "istanbul check-coverage --statement 80 --branch 70 --function 100 --line 80",
    "sass": "if [ -f ./assets/scss/app.scss ]; then node-sass --include-path ./node_modules ./assets/scss/app.scss ./public/css/app.css; fi",
    "lint:sass": "sass-lint 'assets/scss/**/*.scss' -v -q",
    "watch:sass": "nodemon -w assets/scss -e scss -x 'npm-run-all -s lint:sass sass'",
    "copy:images": "if [ -f ./assets/images ]; then cp -r ./assets/images ./public/; fi",
    "uglify": "if [ -f ./assets/js/index.js ]; then browserify -g uglifyify ./assets/js/index.js > ./public/js/bundle.js; fi",
    "watch:js": "nodemon -w assets/js -x 'npm-run-all -s lint:client uglify'",
    "browserify": "browserify ./assets/js/index.js > ./public/js/bundle.js",
    "create:public": "mkdir -p ./public/css ./public/images ./public/js",
    "postinstall": "npm-run-all create:public sass copy:images uglify",
    "snyk-protect": "snyk protect",
    "prepublish": "npm run snyk-protect"
  },
  "dependencies": {
    "body-parser": "^1.17.1",
    "browserify": "^13.0.1",
    "churchill": "0.2.0",
    "express": "^4.15.2",
    "express-partial-templates": "^0.1.0",
    "express-session": "^1.12.1",
    "file-saver": "^1.3.3",
    "hof": "^8.0.0",
    "hogan-express-strict": "^0.5.4",
    "hogan.js": "^3.0.2",
    "lodash": "^4.13.1",
    "moment": "^2.10.6",
    "moment-round": "^1.0.1",
    "node-sass": "^3.7.0",
    "npm-run-all": "^3.1.2",
    "request": "^2.67.0",
    "snyk": "^1.19.1",
    "uglifyify": "^3.0.1",
    "winston": "^1.0.1"
  },
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-as-promised": "^5.3.0",
    "chimp": "^0.42.0",
    "eslint": "^3.4.0",
    "eslint-plugin-filenames": "^1.0.0",
    "eslint-plugin-mocha": "^4.5.0",
    "eslint-plugin-one-variable-per-var": "0.0.3",
    "http-proxy": "^1.15.2",
    "istanbul": "^0.4.3",
    "jscs": "^3.0.2",
    "jsdom": "^11.0.0",
    "jsdom-global": "^3.0.2",
    "mocha": "^3.0.2",
    "nodemon": "^1.8.1",
    "proxyquire": "^1.7.3",
    "reqres": "^1.2.2",
    "rewire": "^2.5.2",
    "sass-lint": "^1.10.2",
    "sinon": "^1.17.2",
    "sinon-chai": "^2.8.0",
    "webdriverio": "~4.8.0"
  },
  "snyk": true
}
